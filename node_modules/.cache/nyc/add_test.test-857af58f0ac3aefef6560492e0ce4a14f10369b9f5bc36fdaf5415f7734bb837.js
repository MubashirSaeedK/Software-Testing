function cov_1ssd34u5l9(){var path="C:\\Users\\mubas\\Desktop\\Software_Web_and_Cloud\\Software testing\\Software-Testing\\test\\add_test.test.js";var hash="cc6a4c36cd9a6a5c8f1a6e1aaf778739c65844d4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\mubas\\Desktop\\Software_Web_and_Cloud\\Software testing\\Software-Testing\\test\\add_test.test.js",statementMap:{"0":{start:{line:7,column:15},end:{line:7,column:26}},"1":{start:{line:9,column:0},end:{line:34,column:3}},"2":{start:{line:11,column:4},end:{line:13,column:7}},"3":{start:{line:12,column:8},end:{line:12,column:39}},"4":{start:{line:15,column:4},end:{line:17,column:7}},"5":{start:{line:16,column:8},end:{line:16,column:44}},"6":{start:{line:19,column:4},end:{line:21,column:7}},"7":{start:{line:20,column:8},end:{line:20,column:42}},"8":{start:{line:23,column:4},end:{line:25,column:7}},"9":{start:{line:24,column:8},end:{line:24,column:42}},"10":{start:{line:27,column:4},end:{line:29,column:7}},"11":{start:{line:28,column:8},end:{line:28,column:39}},"12":{start:{line:31,column:4},end:{line:33,column:7}},"13":{start:{line:32,column:8},end:{line:32,column:41}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:16},end:{line:9,column:17}},loc:{start:{line:9,column:22},end:{line:34,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:65},end:{line:11,column:66}},loc:{start:{line:11,column:71},end:{line:13,column:5}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:63},end:{line:15,column:64}},loc:{start:{line:15,column:69},end:{line:17,column:5}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:19,column:71},end:{line:19,column:72}},loc:{start:{line:19,column:77},end:{line:21,column:5}},line:19},"4":{name:"(anonymous_4)",decl:{start:{line:23,column:71},end:{line:23,column:72}},loc:{start:{line:23,column:77},end:{line:25,column:5}},line:23},"5":{name:"(anonymous_5)",decl:{start:{line:27,column:89},end:{line:27,column:90}},loc:{start:{line:27,column:95},end:{line:29,column:5}},line:27},"6":{name:"(anonymous_6)",decl:{start:{line:31,column:91},end:{line:31,column:92}},loc:{start:{line:31,column:97},end:{line:33,column:5}},line:31}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{},inputSourceMap:{version:3,sources:["add_test.test.js"],names:["chai","add","expect","describe","it","to","equal"],mappings:"AAAA;AACA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,MAAMC,SAASF,KAAKE,MAApB;;AAGAC,SAAS,KAAT,EAAgB,MAAM;;AAErBC,OAAG,wDAAH,EAA6D,MAAK;AAC/DF,eAAOD,IAAI,CAAJ,EAAM,CAAN,CAAP,EAAiBI,EAAjB,CAAoBC,KAApB,CAA0B,EAA1B;AACH,KAFA;;AAIDF,OAAG,sDAAH,EAA2D,MAAK;AAC5DF,eAAOD,IAAI,GAAJ,EAAQ,GAAR,CAAP,EAAqBI,EAArB,CAAwBC,KAAxB,CAA8B,GAA9B;AACH,KAFD;;AAIAF,OAAG,8DAAH,EAAmE,MAAK;AACpEF,eAAOD,IAAI,CAAJ,EAAM,GAAN,CAAP,EAAmBI,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACH,KAFD;;AAIAF,OAAG,8DAAH,EAAmE,MAAK;AACpEF,eAAOD,IAAI,GAAJ,EAAQ,CAAR,CAAP,EAAmBI,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACH,KAFD;;AAIAF,OAAG,gFAAH,EAAqF,MAAK;AACtFF,eAAOD,IAAI,CAAJ,EAAM,CAAC,CAAP,CAAP,EAAkBI,EAAlB,CAAqBC,KAArB,CAA2B,CAA3B;AACH,KAFD;;AAIAF,OAAG,kFAAH,EAAuF,MAAK;AACxFF,eAAOD,IAAI,CAAC,CAAL,EAAO,CAAC,CAAR,CAAP,EAAmBI,EAAnB,CAAsBC,KAAtB,CAA4B,CAAC,CAA7B;AACH,KAFD;AAGC,CAzBD",file:"add_test.test.js",sourceRoot:"C:/Users/mubas/Desktop/Software_Web_and_Cloud/Software testing/Software-Testing/test",sourcesContent:["// node 12 and up\r\n//import chai from \"chai\"\r\n//import sum from \"../sum.js\"\r\n// below for node 10\r\nimport chai from \"chai\"\r\nimport add from \"../src/add.js\"\r\nconst expect = chai.expect\r\n\r\n\r\ndescribe(\"Sum\", () => {\r\n\r\n it(\"should return the correct sum when adding two integers\", () =>{\r\n    expect(add(5,5)).to.equal(10)\r\n});\r\n\r\nit(\"should return the correct sum when adding two floats\", () =>{\r\n    expect(add(3.2,4.1)).to.equal(7.3)\r\n});\r\n\r\nit(\"should return the correct sum when adding integer with float\", () =>{\r\n    expect(add(5,4.2)).to.equal(9.2)\r\n});\r\n\r\nit(\"should return the correct sum when adding float with integer\", () =>{\r\n    expect(add(3.2,4)).to.equal(7.2)\r\n});\r\n\r\nit(\"should return the correct sum when adding posive integer with negative integer\", () =>{\r\n    expect(add(3,-2)).to.equal(1)\r\n});\r\n\r\nit(\"should return the correct sum when adding negative integer with negative integer\", () =>{\r\n    expect(add(-5,-3)).to.equal(-8)\r\n});\r\n})"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cc6a4c36cd9a6a5c8f1a6e1aaf778739c65844d4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ssd34u5l9=function(){return actualCoverage;};}return actualCoverage;}cov_1ssd34u5l9();// node 12 and up
//import chai from "chai"
//import sum from "../sum.js"
// below for node 10
import chai from"chai";import add from"../src/add.js";const expect=(cov_1ssd34u5l9().s[0]++,chai.expect);cov_1ssd34u5l9().s[1]++;describe("Sum",()=>{cov_1ssd34u5l9().f[0]++;cov_1ssd34u5l9().s[2]++;it("should return the correct sum when adding two integers",()=>{cov_1ssd34u5l9().f[1]++;cov_1ssd34u5l9().s[3]++;expect(add(5,5)).to.equal(10);});cov_1ssd34u5l9().s[4]++;it("should return the correct sum when adding two floats",()=>{cov_1ssd34u5l9().f[2]++;cov_1ssd34u5l9().s[5]++;expect(add(3.2,4.1)).to.equal(7.3);});cov_1ssd34u5l9().s[6]++;it("should return the correct sum when adding integer with float",()=>{cov_1ssd34u5l9().f[3]++;cov_1ssd34u5l9().s[7]++;expect(add(5,4.2)).to.equal(9.2);});cov_1ssd34u5l9().s[8]++;it("should return the correct sum when adding float with integer",()=>{cov_1ssd34u5l9().f[4]++;cov_1ssd34u5l9().s[9]++;expect(add(3.2,4)).to.equal(7.2);});cov_1ssd34u5l9().s[10]++;it("should return the correct sum when adding posive integer with negative integer",()=>{cov_1ssd34u5l9().f[5]++;cov_1ssd34u5l9().s[11]++;expect(add(3,-2)).to.equal(1);});cov_1ssd34u5l9().s[12]++;it("should return the correct sum when adding negative integer with negative integer",()=>{cov_1ssd34u5l9().f[6]++;cov_1ssd34u5l9().s[13]++;expect(add(-5,-3)).to.equal(-8);});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZF90ZXN0LnRlc3QuanMiXSwibmFtZXMiOlsiY2hhaSIsImFkZCIsImV4cGVjdCIsImRlc2NyaWJlIiwiaXQiLCJ0byIsImVxdWFsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU9BLElBQVAsTUFBaUIsTUFBakI7QUFDQSxPQUFPQyxHQUFQLE1BQWdCLGVBQWhCO0FBQ0EsTUFBTUMsU0FBU0YsS0FBS0UsTUFBcEI7O0FBR0FDLFNBQVMsS0FBVCxFQUFnQixNQUFNOztBQUVyQkMsT0FBRyx3REFBSCxFQUE2RCxNQUFLO0FBQy9ERixlQUFPRCxJQUFJLENBQUosRUFBTSxDQUFOLENBQVAsRUFBaUJJLEVBQWpCLENBQW9CQyxLQUFwQixDQUEwQixFQUExQjtBQUNILEtBRkE7O0FBSURGLE9BQUcsc0RBQUgsRUFBMkQsTUFBSztBQUM1REYsZUFBT0QsSUFBSSxHQUFKLEVBQVEsR0FBUixDQUFQLEVBQXFCSSxFQUFyQixDQUF3QkMsS0FBeEIsQ0FBOEIsR0FBOUI7QUFDSCxLQUZEOztBQUlBRixPQUFHLDhEQUFILEVBQW1FLE1BQUs7QUFDcEVGLGVBQU9ELElBQUksQ0FBSixFQUFNLEdBQU4sQ0FBUCxFQUFtQkksRUFBbkIsQ0FBc0JDLEtBQXRCLENBQTRCLEdBQTVCO0FBQ0gsS0FGRDs7QUFJQUYsT0FBRyw4REFBSCxFQUFtRSxNQUFLO0FBQ3BFRixlQUFPRCxJQUFJLEdBQUosRUFBUSxDQUFSLENBQVAsRUFBbUJJLEVBQW5CLENBQXNCQyxLQUF0QixDQUE0QixHQUE1QjtBQUNILEtBRkQ7O0FBSUFGLE9BQUcsZ0ZBQUgsRUFBcUYsTUFBSztBQUN0RkYsZUFBT0QsSUFBSSxDQUFKLEVBQU0sQ0FBQyxDQUFQLENBQVAsRUFBa0JJLEVBQWxCLENBQXFCQyxLQUFyQixDQUEyQixDQUEzQjtBQUNILEtBRkQ7O0FBSUFGLE9BQUcsa0ZBQUgsRUFBdUYsTUFBSztBQUN4RkYsZUFBT0QsSUFBSSxDQUFDLENBQUwsRUFBTyxDQUFDLENBQVIsQ0FBUCxFQUFtQkksRUFBbkIsQ0FBc0JDLEtBQXRCLENBQTRCLENBQUMsQ0FBN0I7QUFDSCxLQUZEO0FBR0MsQ0F6QkQiLCJmaWxlIjoiYWRkX3Rlc3QudGVzdC5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9tdWJhcy9EZXNrdG9wL1NvZnR3YXJlX1dlYl9hbmRfQ2xvdWQvU29mdHdhcmUgdGVzdGluZy9Tb2Z0d2FyZS1UZXN0aW5nL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBub2RlIDEyIGFuZCB1cFxyXG4vL2ltcG9ydCBjaGFpIGZyb20gXCJjaGFpXCJcclxuLy9pbXBvcnQgc3VtIGZyb20gXCIuLi9zdW0uanNcIlxyXG4vLyBiZWxvdyBmb3Igbm9kZSAxMFxyXG5pbXBvcnQgY2hhaSBmcm9tIFwiY2hhaVwiXHJcbmltcG9ydCBhZGQgZnJvbSBcIi4uL3NyYy9hZGQuanNcIlxyXG5jb25zdCBleHBlY3QgPSBjaGFpLmV4cGVjdFxyXG5cclxuXHJcbmRlc2NyaWJlKFwiU3VtXCIsICgpID0+IHtcclxuXHJcbiBpdChcInNob3VsZCByZXR1cm4gdGhlIGNvcnJlY3Qgc3VtIHdoZW4gYWRkaW5nIHR3byBpbnRlZ2Vyc1wiLCAoKSA9PntcclxuICAgIGV4cGVjdChhZGQoNSw1KSkudG8uZXF1YWwoMTApXHJcbn0pO1xyXG5cclxuaXQoXCJzaG91bGQgcmV0dXJuIHRoZSBjb3JyZWN0IHN1bSB3aGVuIGFkZGluZyB0d28gZmxvYXRzXCIsICgpID0+e1xyXG4gICAgZXhwZWN0KGFkZCgzLjIsNC4xKSkudG8uZXF1YWwoNy4zKVxyXG59KTtcclxuXHJcbml0KFwic2hvdWxkIHJldHVybiB0aGUgY29ycmVjdCBzdW0gd2hlbiBhZGRpbmcgaW50ZWdlciB3aXRoIGZsb2F0XCIsICgpID0+e1xyXG4gICAgZXhwZWN0KGFkZCg1LDQuMikpLnRvLmVxdWFsKDkuMilcclxufSk7XHJcblxyXG5pdChcInNob3VsZCByZXR1cm4gdGhlIGNvcnJlY3Qgc3VtIHdoZW4gYWRkaW5nIGZsb2F0IHdpdGggaW50ZWdlclwiLCAoKSA9PntcclxuICAgIGV4cGVjdChhZGQoMy4yLDQpKS50by5lcXVhbCg3LjIpXHJcbn0pO1xyXG5cclxuaXQoXCJzaG91bGQgcmV0dXJuIHRoZSBjb3JyZWN0IHN1bSB3aGVuIGFkZGluZyBwb3NpdmUgaW50ZWdlciB3aXRoIG5lZ2F0aXZlIGludGVnZXJcIiwgKCkgPT57XHJcbiAgICBleHBlY3QoYWRkKDMsLTIpKS50by5lcXVhbCgxKVxyXG59KTtcclxuXHJcbml0KFwic2hvdWxkIHJldHVybiB0aGUgY29ycmVjdCBzdW0gd2hlbiBhZGRpbmcgbmVnYXRpdmUgaW50ZWdlciB3aXRoIG5lZ2F0aXZlIGludGVnZXJcIiwgKCkgPT57XHJcbiAgICBleHBlY3QoYWRkKC01LC0zKSkudG8uZXF1YWwoLTgpXHJcbn0pO1xyXG59KSJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IitySkFnQklBO0FBQUFBLDJGQWhCSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU9DLEtBQVAsS0FBaUIsTUFBakIsQ0FDQSxNQUFPQyxJQUFQLEtBQWdCLGVBQWhCLENBQ0EsS0FBTUYsaUNBQVNDLEtBQUtELE1BQXBCLDBCQUdBRyxTQUFTLEtBQVQsQ0FBZ0IsSUFBTSxpREFFckJDLEdBQUcsd0RBQUgsQ0FBNkQsSUFBSyxpREFDL0RKLE9BQU9FLElBQUksQ0FBSixDQUFNLENBQU4sQ0FBUCxFQUFpQkcsRUFBakIsQ0FBb0JDLEtBQXBCLENBQTBCLEVBQTFCLEVBQ0gsQ0FGQSwwQkFJREYsR0FBRyxzREFBSCxDQUEyRCxJQUFLLGlEQUM1REosT0FBT0UsSUFBSSxHQUFKLENBQVEsR0FBUixDQUFQLEVBQXFCRyxFQUFyQixDQUF3QkMsS0FBeEIsQ0FBOEIsR0FBOUIsRUFDSCxDQUZELDBCQUlBRixHQUFHLDhEQUFILENBQW1FLElBQUssaURBQ3BFSixPQUFPRSxJQUFJLENBQUosQ0FBTSxHQUFOLENBQVAsRUFBbUJHLEVBQW5CLENBQXNCQyxLQUF0QixDQUE0QixHQUE1QixFQUNILENBRkQsMEJBSUFGLEdBQUcsOERBQUgsQ0FBbUUsSUFBSyxpREFDcEVKLE9BQU9FLElBQUksR0FBSixDQUFRLENBQVIsQ0FBUCxFQUFtQkcsRUFBbkIsQ0FBc0JDLEtBQXRCLENBQTRCLEdBQTVCLEVBQ0gsQ0FGRCwyQkFJQUYsR0FBRyxnRkFBSCxDQUFxRixJQUFLLGtEQUN0RkosT0FBT0UsSUFBSSxDQUFKLENBQU0sQ0FBQyxDQUFQLENBQVAsRUFBa0JHLEVBQWxCLENBQXFCQyxLQUFyQixDQUEyQixDQUEzQixFQUNILENBRkQsMkJBSUFGLEdBQUcsa0ZBQUgsQ0FBdUYsSUFBSyxrREFDeEZKLE9BQU9FLElBQUksQ0FBQyxDQUFMLENBQU8sQ0FBQyxDQUFSLENBQVAsRUFBbUJHLEVBQW5CLENBQXNCQyxLQUF0QixDQUE0QixDQUFDLENBQTdCLEVBQ0gsQ0FGRCxFQUdDLENBekJEIiwibmFtZXMiOlsiZXhwZWN0IiwiY2hhaSIsImFkZCIsImRlc2NyaWJlIiwiaXQiLCJ0byIsImVxdWFsIl0sInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9tdWJhcy9EZXNrdG9wL1NvZnR3YXJlX1dlYl9hbmRfQ2xvdWQvU29mdHdhcmUgdGVzdGluZy9Tb2Z0d2FyZS1UZXN0aW5nL3Rlc3QiLCJzb3VyY2VzIjpbImFkZF90ZXN0LnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbm9kZSAxMiBhbmQgdXBcclxuLy9pbXBvcnQgY2hhaSBmcm9tIFwiY2hhaVwiXHJcbi8vaW1wb3J0IHN1bSBmcm9tIFwiLi4vc3VtLmpzXCJcclxuLy8gYmVsb3cgZm9yIG5vZGUgMTBcclxuaW1wb3J0IGNoYWkgZnJvbSBcImNoYWlcIlxyXG5pbXBvcnQgYWRkIGZyb20gXCIuLi9zcmMvYWRkLmpzXCJcclxuY29uc3QgZXhwZWN0ID0gY2hhaS5leHBlY3RcclxuXHJcblxyXG5kZXNjcmliZShcIlN1bVwiLCAoKSA9PiB7XHJcblxyXG4gaXQoXCJzaG91bGQgcmV0dXJuIHRoZSBjb3JyZWN0IHN1bSB3aGVuIGFkZGluZyB0d28gaW50ZWdlcnNcIiwgKCkgPT57XHJcbiAgICBleHBlY3QoYWRkKDUsNSkpLnRvLmVxdWFsKDEwKVxyXG59KTtcclxuXHJcbml0KFwic2hvdWxkIHJldHVybiB0aGUgY29ycmVjdCBzdW0gd2hlbiBhZGRpbmcgdHdvIGZsb2F0c1wiLCAoKSA9PntcclxuICAgIGV4cGVjdChhZGQoMy4yLDQuMSkpLnRvLmVxdWFsKDcuMylcclxufSk7XHJcblxyXG5pdChcInNob3VsZCByZXR1cm4gdGhlIGNvcnJlY3Qgc3VtIHdoZW4gYWRkaW5nIGludGVnZXIgd2l0aCBmbG9hdFwiLCAoKSA9PntcclxuICAgIGV4cGVjdChhZGQoNSw0LjIpKS50by5lcXVhbCg5LjIpXHJcbn0pO1xyXG5cclxuaXQoXCJzaG91bGQgcmV0dXJuIHRoZSBjb3JyZWN0IHN1bSB3aGVuIGFkZGluZyBmbG9hdCB3aXRoIGludGVnZXJcIiwgKCkgPT57XHJcbiAgICBleHBlY3QoYWRkKDMuMiw0KSkudG8uZXF1YWwoNy4yKVxyXG59KTtcclxuXHJcbml0KFwic2hvdWxkIHJldHVybiB0aGUgY29ycmVjdCBzdW0gd2hlbiBhZGRpbmcgcG9zaXZlIGludGVnZXIgd2l0aCBuZWdhdGl2ZSBpbnRlZ2VyXCIsICgpID0+e1xyXG4gICAgZXhwZWN0KGFkZCgzLC0yKSkudG8uZXF1YWwoMSlcclxufSk7XHJcblxyXG5pdChcInNob3VsZCByZXR1cm4gdGhlIGNvcnJlY3Qgc3VtIHdoZW4gYWRkaW5nIG5lZ2F0aXZlIGludGVnZXIgd2l0aCBuZWdhdGl2ZSBpbnRlZ2VyXCIsICgpID0+e1xyXG4gICAgZXhwZWN0KGFkZCgtNSwtMykpLnRvLmVxdWFsKC04KVxyXG59KTtcclxufSkiXX0=